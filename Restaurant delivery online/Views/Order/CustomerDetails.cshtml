@model Order

@{
    ViewData["Title"] = "Customer Details";
    var restaurantId = TempData["restaurantId"];
}

<div class="container wrapper mt-4">
    <div class="row align-items-center">
        <!-- Form Container -->
        <div class="form-container col-md-8 mb-4">
            <div class="bg-white p-4 rounded w-100">
                <h2 class="mb-4">Reserve Now</h2>
                <p class="text-muted">Please fill in your details to complete your reservation. We look forward to serving you!</p>
                <form asp-action="CustomerDetails" method="post">
                    <div class="row mb-3">
                        <div class="col-md-6 mb-3">
                            <div class="position-relative">
                            <input asp-for="CustomerName" class="form-control custom-input pl-4" placeholder="Name" />
                            <i class="fa fa-user position-absolute fa-input" ></i>
                            </div>
                            <span asp-validation-for="CustomerName" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 ">
                            <div class="position-relative">

                            <input asp-for="CustomerPhone" class="form-control custom-input pl-4" placeholder="Phone" />
                            <i class="fa fa-phone position-absolute fa-input" ></i>
                            </div>
                            <span asp-validation-for="CustomerPhone" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6 mb-3" >
                                <div class="position-relative">

                            <input asp-for="CustomerEmail" class="form-control custom-input pl-4" placeholder="Email" />
                            <i class="fa fa-envelope position-absolute fa-input" ></i>
                            </div>
                            <span asp-validation-for="CustomerEmail" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 ">
                                    <div class="position-relative">

                            <input asp-for="CustomerAddress" class="form-control custom-input pl-4" placeholder="Address" />
                                <i class="fa-solid fa-location-dot position-absolute fa-input" ></i>
                            </div>
                            <span asp-validation-for="CustomerAddress" class="text-danger"></span>
                        </div>
                    </div>
                    <!-- Hidden fields for menu items -->
                    <input name="selectedMenuItems" type="hidden" id="menuItems" />
                    <div class="d-flex justify-content-between mt-4">
                        <a asp-controller="Menu" asp-action="Index" asp-route-restaurantId="@restaurantId" class="btn btn-warning custom-button">BACK</a>
                        <button type="submit" class="btn btn-warning custom-button">CONFIRM</button>
                    </div>
                </form>
            </div>
        </div>
        <!-- Special Container -->
        <div class="special-container col-md-4 mb-4">
            <div class="bg-white p-4 rounded border border-warning w-100">
                <h3 class="text-warning">Today's Special</h3>
                <h4>Caesar Salad</h4>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
                <img src="~/assets/images/resource/restaurant-detail-big-img1-2.jpg" alt="Special dish image" class="img-fluid rounded" />
                <h4>$12.00</h4>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(document).ready(function () {
            // Retrieve selected items from TempData
            var selectedMenuItems = @Html.Raw(TempData["SelectedItems"] ?? "[]");

            // Populate the hidden input field with the selected items
            $("#menuItems").val(JSON.stringify(selectedMenuItems));

            console.log($("#menuItems").val())
        });
    </script>
}

<style>
    .wrapper {
        min-height: 100vh; /* Ensure the row takes up at least the full viewport height */
        display: flex;
        align-items: center; /* Center vertically */
        margin-top: 0 !important;
    }

    .form-container, .special-container {
        display: flex;
        flex-direction: column;
        justify-content: center; /* Center contents vertically within each container */
    }

        .form-container h2, .special-container h3 {
            font-family: 'Brush Script MT', cursive;
        }

    /* Override Bootstrap styles */
    .custom-input {
        border-radius: 0; 
        padding-right: 4.5rem !important; 
    }
    .fa-input{
        right: 0;
        top: 50%;
        transform: translateY(-50%);
        color: #fff;
        background-color: #000;
        padding: 1rem;
        min-width: 3.5rem;
        text-align: center;
    }
    .input-icon {
        right: 0;
        background-color: black;
        color: white;
        border-radius: 0.25rem;
        width: 2.5rem;
        height: 2.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
    }

    /* Ensure form container takes full height of its row for centering */
    .form-container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        min-height: 100%;
    }

    .custom-input {
        padding-right: 1.5rem; /* Reduce padding for smaller screens */
    }

    .text-danger {
        font-size: 0.875em;
        color: #dc3545; /* Red color for error messages */
        margin-top: 0.25rem;
    }
</style>
